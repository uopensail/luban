name: Build and upload to PyPI

on:
#  release:
#    types: [published]
  push:
    branches:
      - pypi-ci

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.6.1
        env:
          CIBW_BEFORE_ALL_MACOS: >
            brew install protobuf &&
            cd helper && bash helper.sh && cd -
          CIBW_BEFORE_ALL_LINUX: >
            WORKSPACE=`pwd` &&  
            yum -y install gcc automake autoconf libtool make gcc-c++ wget &&
            cd /tmp && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.20.0/protobuf-all-3.20.0.tar.gz &&
            tar zxvf protobuf-all-3.20.0.tar.gz && cd protobuf-3.20.0 &&
            ./autogen.sh && ./configure && 
            make && make install && 
            cd ${WORKSPACE}/helper && bash helper.sh && cd ${WORKSPACE}
          CIBW_ARCHS_LINUX: auto, aarch64 

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: |
          sudo apt-get update &&
          sudo apt-get install -y libprotobuf-dev protobuf-compiler &&
          cd helper && bash helper.sh && cd -
          pwd     
          pipx run build --sdist 
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
          
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: 'github.event.prerelease'
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: '!github.event.prerelease'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
